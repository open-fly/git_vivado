#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# .prj_zyf.tcl: Tcl script for re-creating project 'prj_zyf2'
#
# Generated by Vivado on Tue Jul 18 15:12:37 +0800 2023
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (.prj_zyf.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/system_wrapper.v"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/ip/ila_0/ila_0.xci"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/ips/misc/single_module/mem_to_udp_process.v"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/ips/misc/single_module/udp_to_mem_process.v"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/tcp_platform_simple/sdk/cpu/Debug/cpu.elf"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/axku040_ddr4.xdc"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/eth.xdc"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/timing.xdc"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/adc9653.xdc"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/adc9653_spi.xdc"
#    "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/peripheral.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/system_wrapper.v" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/ip/ila_0/ila_0.xci" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/ips/misc/single_module/mem_to_udp_process.v" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/ips/misc/single_module/udp_to_mem_process.v" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/tcp_platform_simple/sdk/cpu/Debug/cpu.elf" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/axku040_ddr4.xdc" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/eth.xdc" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/timing.xdc" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/adc9653.xdc" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/adc9653_spi.xdc" \
   "E:/git_vivado/Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/peripheral.xdc" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set paths [list \
   [file normalize "$origin_dir/../Work"] \
   [file normalize "$origin_dir/../Src/IP"] \
   [file normalize "$origin_dir/../Src/IP/combinnation_add_zero_add_reg_if_ip2/combinnation_add_zero_add_reg_if_ip"] \
   [file normalize "$origin_dir/../Src/IP/trigger_end"] \
   [file normalize "$origin_dir/../Src/tcpip_core_edif"] \
   [file normalize "$origin_dir/../Src/misc"] \
   [file normalize "$origin_dir/../Src/axis_ddr"] \
   [file normalize "$origin_dir/../Src/axil_ram"] \
   [file normalize "$origin_dir/../Src/ad9653"] \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "prj_zyf2"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file ".prj_zyf.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../Work/prj_zyf2"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project {_xil_proj_name_} ./${_xil_proj_name_} -part xcku040-ffva1156-2-i

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "compxlib.modelsim_compiled_library_dir" -value "E:/sim_lib" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcku040-ffva1156-2-i" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "12" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "12" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "12" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "12" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "12" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "12" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "12" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../Work"] [file normalize "$origin_dir/../Src/IP"] [file normalize "$origin_dir/../Src/IP/combinnation_add_zero_add_reg_if_ip2/combinnation_add_zero_add_reg_if_ip"] [file normalize "$origin_dir/../Src/IP/trigger_end"] [file normalize "$origin_dir/../Src/tcpip_core_edif"] [file normalize "$origin_dir/../Src/misc"] [file normalize "$origin_dir/../Src/axis_ddr"] [file normalize "$origin_dir/../Src/axil_ram"] [file normalize "$origin_dir/../Src/ad9653"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/system_wrapper.v"]\
 [file normalize "${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/sources_1/ip/ila_0/ila_0.xci"]\
 [file normalize "${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/ips/misc/single_module/mem_to_udp_process.v"]\
 [file normalize "${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/ips/misc/single_module/udp_to_mem_process.v"]\
 [file normalize "${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/sources_1/imports/STXM_FPGA/tcp_platform_simple/sdk/cpu/Debug/cpu.elf"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ila_0/ila_0.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "Debug/cpu.elf"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "scoped_to_cells" -value "CPU_TOP/microblaze_0" -objects $file_obj
set_property -name "scoped_to_ref" -value "system" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/axku040_ddr4.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrants/axku040_ddr4.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/eth.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrants/eth.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/timing.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrants/timing.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/adc9653.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrants/adc9653.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/adc9653_spi.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrants/adc9653_spi.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../Work/prj_zyf2/prj_zyf2.srcs/constrs_1/imports/constrants/peripheral.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constrants/peripheral.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "$proj_dir/${_xil_proj_name_}.srcs/constrs_1/imports/constrants/peripheral.xdc" -objects $obj
set_property -name "target_part" -value "xcku040-ffva1156-2-i" -objects $obj
set_property -name "target_ucf" -value "$proj_dir/${_xil_proj_name_}.srcs/constrs_1/imports/constrants/peripheral.xdc" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "mem_to_udp_process" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD system
proc cr_bd_system { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name system

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:axis_clock_converter:1.1\
  xilinx.com:user:tcpip_core:1.0\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:axi_iic:2.0\
  xilinx.com:ip:axi_intc:4.1\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:axi_timer:2.0\
  xilinx.com:ip:mdm:3.2\
  xilinx.com:ip:microblaze:11.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:user:spi_io:1.0\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:user:fifo_top:1.0\
  xilinx.com:user:mdyFmcAd9653_top:1.0\
  xilinx.com:user:trigger:1.0\
  ustc:user:ddr_ctrl_top:2.1\
  xilinx.com:ip:axi_bram_ctrl:4.1\
  ustc:awg1.0:cpu_ram:1.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:lmb_bram_if_cntlr:4.0\
  xilinx.com:ip:lmb_v10:3.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: mb_lmb
proc create_hier_cell_mb_lmb { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_mb_lmb() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB

  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB


  # Create pins
  create_bd_pin -dir I -type clk LMB_Clk
  create_bd_pin -dir I -type rst LMB_Rst

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Assume_Synchronous_Clk {true} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Port_B_Write_Rate {50} \
   CONFIG.Use_RSTB_Pin {true} \
 ] $blk_mem_gen_0

  # Create instance: dlmb_bram_if_cntlr, and set properties
  set dlmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 dlmb_bram_if_cntlr ]

  # Create instance: dlmb_v10, and set properties
  set dlmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 dlmb_v10 ]

  # Create instance: ilmb_bram_if_cntlr, and set properties
  set ilmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 ilmb_bram_if_cntlr ]

  # Create instance: ilmb_v10, and set properties
  set ilmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 ilmb_v10 ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn [get_bd_intf_pins dlmb_bram_if_cntlr/SLMB] [get_bd_intf_pins dlmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins ilmb_bram_if_cntlr/SLMB] [get_bd_intf_pins ilmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins DLMB] [get_bd_intf_pins dlmb_v10/LMB_M]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins ILMB] [get_bd_intf_pins ilmb_v10/LMB_M]
  connect_bd_intf_net -intf_net dlmb_bram_if_cntlr_BRAM_PORT [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTA] [get_bd_intf_pins dlmb_bram_if_cntlr/BRAM_PORT]
  connect_bd_intf_net -intf_net ilmb_bram_if_cntlr_BRAM_PORT [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB] [get_bd_intf_pins ilmb_bram_if_cntlr/BRAM_PORT]

  # Create port connections
  connect_bd_net -net LMB_Rst_1 [get_bd_pins LMB_Rst] [get_bd_pins dlmb_bram_if_cntlr/LMB_Rst] [get_bd_pins dlmb_v10/SYS_Rst] [get_bd_pins ilmb_bram_if_cntlr/LMB_Rst] [get_bd_pins ilmb_v10/SYS_Rst]
  connect_bd_net -net Net [get_bd_pins LMB_Clk] [get_bd_pins dlmb_bram_if_cntlr/LMB_Clk] [get_bd_pins dlmb_v10/LMB_Clk] [get_bd_pins ilmb_bram_if_cntlr/LMB_Clk] [get_bd_pins ilmb_v10/LMB_Clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: cpu_ram
proc create_hier_cell_cpu_ram { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_cpu_ram() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 cmu2cpu_axis

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 cpu2cmu_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 cpu_bram_S_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 cpu_ram_S_AXI


  # Create pins
  create_bd_pin -dir I cmu_clk
  create_bd_pin -dir I cmu_rstn
  create_bd_pin -dir I cpu_clk
  create_bd_pin -dir O cpu_ram_intr_o
  create_bd_pin -dir I cpu_rstn
  create_bd_pin -dir I -type rst rst

  # Create instance: axi_bram_ctrl_0, and set properties
  set axi_bram_ctrl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 axi_bram_ctrl_0 ]
  set_property -dict [ list \
   CONFIG.SINGLE_PORT_BRAM {1} \
 ] $axi_bram_ctrl_0

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: axis_clock_converter_1, and set properties
  set axis_clock_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_1 ]

  # Create instance: cpu_ram_0, and set properties
  set cpu_ram_0 [ create_bd_cell -type ip -vlnv ustc:awg1.0:cpu_ram:1.0 cpu_ram_0 ]
  set_property -dict [ list \
   CONFIG.DEBUG {true} \
 ] $cpu_ram_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTA [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTA] [get_bd_intf_pins cpu_ram_0/bram_a]
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/M_AXIS] [get_bd_intf_pins cpu_ram_0/s_axis]
  connect_bd_intf_net -intf_net axis_clock_converter_1_M_AXIS [get_bd_intf_pins cpu2cmu_axis] [get_bd_intf_pins axis_clock_converter_1/M_AXIS]
  connect_bd_intf_net -intf_net cmu2cpu_axis_1 [get_bd_intf_pins cmu2cpu_axis] [get_bd_intf_pins axis_clock_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net cpu_bram_S_AXI_1 [get_bd_intf_pins cpu_bram_S_AXI] [get_bd_intf_pins axi_bram_ctrl_0/S_AXI]
  connect_bd_intf_net -intf_net cpu_ram_0_m_axis [get_bd_intf_pins axis_clock_converter_1/S_AXIS] [get_bd_intf_pins cpu_ram_0/m_axis]
  connect_bd_intf_net -intf_net cpu_ram_S_AXI_1 [get_bd_intf_pins cpu_ram_S_AXI] [get_bd_intf_pins cpu_ram_0/S_AXI]

  # Create port connections
  connect_bd_net -net cmu_clk_1 [get_bd_pins cmu_clk] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins axis_clock_converter_1/m_axis_aclk]
  connect_bd_net -net cmu_rstn_1 [get_bd_pins cmu_rstn] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins axis_clock_converter_1/m_axis_aresetn]
  connect_bd_net -net cpu_clk_1 [get_bd_pins cpu_clk] [get_bd_pins axi_bram_ctrl_0/s_axi_aclk] [get_bd_pins axis_clock_converter_0/m_axis_aclk] [get_bd_pins axis_clock_converter_1/s_axis_aclk] [get_bd_pins cpu_ram_0/S_AXI_aclk] [get_bd_pins cpu_ram_0/clk]
  connect_bd_net -net cpu_ram_0_intr_o [get_bd_pins cpu_ram_intr_o] [get_bd_pins cpu_ram_0/intr_o]
  connect_bd_net -net cpu_rstn_1 [get_bd_pins cpu_rstn] [get_bd_pins axi_bram_ctrl_0/s_axi_aresetn] [get_bd_pins axis_clock_converter_0/m_axis_aresetn] [get_bd_pins axis_clock_converter_1/s_axis_aresetn] [get_bd_pins cpu_ram_0/S_AXI_aresetn]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins cpu_ram_0/rst]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: MEM_TOP
proc create_hier_cell_MEM_TOP { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_MEM_TOP() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_daq2mem_axis

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 c0_ddr4_0


  # Create pins
  create_bd_pin -dir I c0_sys_clk_n
  create_bd_pin -dir I c0_sys_clk_p
  create_bd_pin -dir O -type clk cpu_clk
  create_bd_pin -dir I -type rst cpu_rstn
  create_bd_pin -dir I -type clk daq_clk
  create_bd_pin -dir I -type rst daq_rstn
  create_bd_pin -dir I -type clk eth_clk
  create_bd_pin -dir I -type rst eth_rstn
  create_bd_pin -dir O -type clk mem_clk
  create_bd_pin -dir O -type rst mem_rstn
  create_bd_pin -dir I -type rst sys_rst

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: axis_clock_converter_1, and set properties
  set axis_clock_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_1 ]

  # Create instance: axis_interconnect_0, and set properties
  set axis_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_interconnect:2.1 axis_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.ARB_ON_MAX_XFERS {0} \
   CONFIG.ARB_ON_TLAST {1} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {2} \
   CONFIG.S00_FIFO_DEPTH {32} \
   CONFIG.S01_FIFO_DEPTH {32} \
 ] $axis_interconnect_0

  # Create instance: ddr_ctrl_top_1, and set properties
  set ddr_ctrl_top_1 [ create_bd_cell -type ip -vlnv ustc:user:ddr_ctrl_top:2.1 ddr_ctrl_top_1 ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins c0_ddr4_0] [get_bd_intf_pins ddr_ctrl_top_1/c0_ddr4]
  connect_bd_intf_net -intf_net S_AXI_1 [get_bd_intf_pins S_AXI] [get_bd_intf_pins ddr_ctrl_top_1/S_AXI]
  connect_bd_intf_net -intf_net S_daq2mem_axis_1 [get_bd_intf_pins S_daq2mem_axis] [get_bd_intf_pins axis_clock_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/M_AXIS] [get_bd_intf_pins axis_interconnect_0/S01_AXIS]
  connect_bd_intf_net -intf_net axis_clock_converter_1_M_AXIS [get_bd_intf_pins axis_clock_converter_1/M_AXIS] [get_bd_intf_pins axis_interconnect_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M00_AXIS [get_bd_intf_pins axis_interconnect_0/M00_AXIS] [get_bd_intf_pins ddr_ctrl_top_1/S_AXIS]
  connect_bd_intf_net -intf_net ddr_ctrl_top_1_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins ddr_ctrl_top_1/M_AXIS]
  connect_bd_intf_net -intf_net udp_2_mem_process_0_m_axis [get_bd_intf_pins S_AXIS] [get_bd_intf_pins axis_clock_converter_1/S_AXIS]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins mem_clk] [get_bd_pins axis_clock_converter_0/m_axis_aclk] [get_bd_pins axis_clock_converter_1/m_axis_aclk] [get_bd_pins axis_interconnect_0/ACLK] [get_bd_pins axis_interconnect_0/M00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S01_AXIS_ACLK] [get_bd_pins ddr_ctrl_top_1/AXIS_ACLK] [get_bd_pins ddr_ctrl_top_1/ui_clk]
  connect_bd_net -net Net [get_bd_pins eth_clk] [get_bd_pins axis_clock_converter_1/s_axis_aclk]
  connect_bd_net -net Net1 [get_bd_pins eth_rstn] [get_bd_pins axis_clock_converter_1/s_axis_aresetn]
  connect_bd_net -net c0_sys_clk_n_1 [get_bd_pins c0_sys_clk_n] [get_bd_pins ddr_ctrl_top_1/c0_sys_clk_n]
  connect_bd_net -net c0_sys_clk_p_1 [get_bd_pins c0_sys_clk_p] [get_bd_pins ddr_ctrl_top_1/c0_sys_clk_p]
  connect_bd_net -net clk_wiz_clk_out1 [get_bd_pins cpu_clk] [get_bd_pins ddr_ctrl_top_1/S_AXI_aclk] [get_bd_pins ddr_ctrl_top_1/cpu_clk]
  connect_bd_net -net daq_clk_1 [get_bd_pins daq_clk] [get_bd_pins axis_clock_converter_0/s_axis_aclk]
  connect_bd_net -net daq_rstn_1 [get_bd_pins daq_rstn] [get_bd_pins axis_clock_converter_0/s_axis_aresetn]
  connect_bd_net -net ddr_ctrl_top_0_ui_rst_n [get_bd_pins mem_rstn] [get_bd_pins axis_clock_converter_0/m_axis_aresetn] [get_bd_pins axis_clock_converter_1/m_axis_aresetn] [get_bd_pins axis_interconnect_0/ARESETN] [get_bd_pins axis_interconnect_0/M00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S01_AXIS_ARESETN] [get_bd_pins ddr_ctrl_top_1/AXIS_ARESETN] [get_bd_pins ddr_ctrl_top_1/ui_rst_n]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_aresetn [get_bd_pins cpu_rstn] [get_bd_pins ddr_ctrl_top_1/S_AXI_aresetn]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_reset [get_bd_pins sys_rst] [get_bd_pins ddr_ctrl_top_1/sys_rst]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: DAQ_TOP
proc create_hier_cell_DAQ_TOP { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_DAQ_TOP() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_DAQ

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_rd_axis


  # Create pins
  create_bd_pin -dir O -from 0 -to 0 AD1_CSB
  create_bd_pin -dir O -from 0 -to 0 ADC_SCLK
  create_bd_pin -dir O -from 0 -to 0 ADC_SDIO
  create_bd_pin -dir I -from 0 -to 0 CLK_200M_N
  create_bd_pin -dir I -from 0 -to 0 CLK_200M_P
  create_bd_pin -dir I -from 0 -to 0 EXT_PLL_LOCK
  create_bd_pin -dir O -from 0 -to 0 F_CLK_SEL
  create_bd_pin -dir O -from 3 -to 0 LED
  create_bd_pin -dir I -from 0 -to 0 PLL_CLK_N
  create_bd_pin -dir I -from 0 -to 0 PLL_CLK_P
  create_bd_pin -dir O -from 0 -to 0 PLL_CS
  create_bd_pin -dir O -from 0 -to 0 PLL_RESETN
  create_bd_pin -dir O -from 0 -to 0 PLL_SCLK
  create_bd_pin -dir O -from 0 -to 0 PLL_SDIO
  create_bd_pin -dir I -from 0 -to 0 PLL_SDO
  create_bd_pin -dir I -from 9 -to 0 ad9653_ifc_n_0
  create_bd_pin -dir I -from 9 -to 0 ad9653_ifc_p_0
  create_bd_pin -dir O -from 0 -to 0 adc_sync_0
  create_bd_pin -dir I cpu_clk
  create_bd_pin -dir I cpu_rstn
  create_bd_pin -dir O -from 0 -to 0 daq_clk
  create_bd_pin -dir O -from 0 -to 0 daq_rstn
  create_bd_pin -dir I external_trig_0
  create_bd_pin -dir I -type rst reset

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]

  # Create instance: fifo_top_0, and set properties
  set fifo_top_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:fifo_top:1.0 fifo_top_0 ]

  # Create instance: mdyFmcAd9653_top_0, and set properties
  set mdyFmcAd9653_top_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:mdyFmcAd9653_top:1.0 mdyFmcAd9653_top_0 ]

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: trigger_0, and set properties
  set trigger_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:trigger:1.0 trigger_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXI_DAQ_1 [get_bd_intf_pins S_AXI_DAQ] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins trigger_0/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins fifo_top_0/S_AXI]
  connect_bd_intf_net -intf_net fifo_top_0_rd_axis [get_bd_intf_pins m_rd_axis] [get_bd_intf_pins fifo_top_0/rd_axis]
  connect_bd_intf_net -intf_net trigger_0_M_AXI [get_bd_intf_pins fifo_top_0/trigger_axis] [get_bd_intf_pins trigger_0/M_AXI]

  # Create port connections
  connect_bd_net -net CLK_200M_N_1 [get_bd_pins CLK_200M_N] [get_bd_pins mdyFmcAd9653_top_0/CLK_200M_N]
  connect_bd_net -net CLK_200M_P_1 [get_bd_pins CLK_200M_P] [get_bd_pins mdyFmcAd9653_top_0/CLK_200M_P]
  connect_bd_net -net EXT_PLL_LOCK_1 [get_bd_pins EXT_PLL_LOCK] [get_bd_pins mdyFmcAd9653_top_0/EXT_PLL_LOCK]
  connect_bd_net -net PLL_CLK_N_1 [get_bd_pins PLL_CLK_N] [get_bd_pins mdyFmcAd9653_top_0/PLL_CLK_N]
  connect_bd_net -net PLL_CLK_P_1 [get_bd_pins PLL_CLK_P] [get_bd_pins mdyFmcAd9653_top_0/PLL_CLK_P]
  connect_bd_net -net PLL_SDO_1 [get_bd_pins PLL_SDO] [get_bd_pins mdyFmcAd9653_top_0/PLL_SDO]
  connect_bd_net -net ad9653_ifc_n_0_1 [get_bd_pins ad9653_ifc_n_0] [get_bd_pins mdyFmcAd9653_top_0/ad9653_ifc_n]
  connect_bd_net -net ad9653_ifc_p_0_1 [get_bd_pins ad9653_ifc_p_0] [get_bd_pins mdyFmcAd9653_top_0/ad9653_ifc_p]
  connect_bd_net -net cpu_clk_1 [get_bd_pins cpu_clk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins fifo_top_0/S_AXI_aclk] [get_bd_pins trigger_0/S_AXI_aclk]
  connect_bd_net -net cpu_rstn_1 [get_bd_pins cpu_rstn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins fifo_top_0/S_AXI_aresetn] [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins trigger_0/S_AXI_aresetn]
  connect_bd_net -net external_trig_0_1 [get_bd_pins external_trig_0] [get_bd_pins trigger_0/external_trig]
  connect_bd_net -net mdyFmcAd9653_top_0_AD1_CSB [get_bd_pins AD1_CSB] [get_bd_pins mdyFmcAd9653_top_0/AD1_CSB]
  connect_bd_net -net mdyFmcAd9653_top_0_ADC_SCLK [get_bd_pins ADC_SCLK] [get_bd_pins mdyFmcAd9653_top_0/ADC_SCLK]
  connect_bd_net -net mdyFmcAd9653_top_0_ADC_SDIO [get_bd_pins ADC_SDIO] [get_bd_pins mdyFmcAd9653_top_0/ADC_SDIO]
  connect_bd_net -net mdyFmcAd9653_top_0_ADC_SYNC [get_bd_pins adc_sync_0] [get_bd_pins mdyFmcAd9653_top_0/ADC_SYNC]
  connect_bd_net -net mdyFmcAd9653_top_0_F_CLK_SEL [get_bd_pins F_CLK_SEL] [get_bd_pins mdyFmcAd9653_top_0/F_CLK_SEL]
  connect_bd_net -net mdyFmcAd9653_top_0_LED [get_bd_pins LED] [get_bd_pins mdyFmcAd9653_top_0/LED]
  connect_bd_net -net mdyFmcAd9653_top_0_PLL_CS [get_bd_pins PLL_CS] [get_bd_pins mdyFmcAd9653_top_0/PLL_CS]
  connect_bd_net -net mdyFmcAd9653_top_0_PLL_RESETN [get_bd_pins PLL_RESETN] [get_bd_pins mdyFmcAd9653_top_0/PLL_RESETN]
  connect_bd_net -net mdyFmcAd9653_top_0_PLL_SCLK [get_bd_pins PLL_SCLK] [get_bd_pins mdyFmcAd9653_top_0/PLL_SCLK]
  connect_bd_net -net mdyFmcAd9653_top_0_PLL_SDIO [get_bd_pins PLL_SDIO] [get_bd_pins mdyFmcAd9653_top_0/PLL_SDIO]
  connect_bd_net -net mdyFmcAd9653_top_0_clk_125M [get_bd_pins daq_clk] [get_bd_pins fifo_top_0/clk] [get_bd_pins mdyFmcAd9653_top_0/clk_125M] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins trigger_0/clk]
  connect_bd_net -net proc_sys_reset_0_interconnect_aresetn [get_bd_pins daq_rstn] [get_bd_pins proc_sys_reset_0/interconnect_aresetn]
  connect_bd_net -net reset_1 [get_bd_pins reset] [get_bd_pins fifo_top_0/rst]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /DAQ_TOP] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.868823",
   "Default View_TopLeft":"-315,-90",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port S_AXI_DAQ -pg 1 -lvl 0 -x -130 -y 210 -defaultsOSRD
preplace port m_rd_axis -pg 1 -lvl 6 -x 1910 -y 250 -defaultsOSRD
preplace port cpu_clk -pg 1 -lvl 0 -x -130 -y 40 -defaultsOSRD
preplace port cpu_rstn -pg 1 -lvl 0 -x -130 -y 60 -defaultsOSRD
preplace port external_trig_0 -pg 1 -lvl 0 -x -130 -y 100 -defaultsOSRD
preplace port reset -pg 1 -lvl 0 -x -130 -y 20 -defaultsOSRD
preplace portBus ad9653_ifc_n_0 -pg 1 -lvl 0 -x -130 -y 470 -defaultsOSRD
preplace portBus ad9653_ifc_p_0 -pg 1 -lvl 0 -x -130 -y 510 -defaultsOSRD
preplace portBus adc_sync_0 -pg 1 -lvl 6 -x 1910 -y 480 -defaultsOSRD
preplace portBus LED -pg 1 -lvl 6 -x 1910 -y 360 -defaultsOSRD
preplace portBus F_CLK_SEL -pg 1 -lvl 6 -x 1910 -y 300 -defaultsOSRD
preplace portBus PLL_SCLK -pg 1 -lvl 6 -x 1910 -y 320 -defaultsOSRD
preplace portBus PLL_CS -pg 1 -lvl 6 -x 1910 -y 340 -defaultsOSRD
preplace portBus PLL_SDIO -pg 1 -lvl 6 -x 1910 -y 380 -defaultsOSRD
preplace portBus ADC_SCLK -pg 1 -lvl 6 -x 1910 -y 400 -defaultsOSRD
preplace portBus AD1_CSB -pg 1 -lvl 6 -x 1910 -y 420 -defaultsOSRD
preplace portBus ADC_SDIO -pg 1 -lvl 6 -x 1910 -y 460 -defaultsOSRD
preplace portBus PLL_CLK_P -pg 1 -lvl 0 -x -130 -y 370 -defaultsOSRD
preplace portBus PLL_CLK_N -pg 1 -lvl 0 -x -130 -y 410 -defaultsOSRD
preplace portBus PLL_SDO -pg 1 -lvl 0 -x -130 -y 430 -defaultsOSRD
preplace portBus EXT_PLL_LOCK -pg 1 -lvl 0 -x -130 -y 390 -defaultsOSRD
preplace portBus PLL_RESETN -pg 1 -lvl 6 -x 1910 -y 440 -defaultsOSRD
preplace portBus daq_clk -pg 1 -lvl 6 -x 1910 -y 500 -defaultsOSRD
preplace portBus daq_rstn -pg 1 -lvl 6 -x 1910 -y 560 -defaultsOSRD
preplace portBus CLK_200M_P -pg 1 -lvl 0 -x -130 -y 320 -defaultsOSRD
preplace portBus CLK_200M_N -pg 1 -lvl 0 -x -130 -y 350 -defaultsOSRD
preplace inst trigger_0 -pg 1 -lvl 2 -x 570 -y 230 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 1 -x 240 -y 60 -defaultsOSRD
preplace inst proc_sys_reset_0 -pg 1 -lvl 3 -x 900 -y 540 -defaultsOSRD
preplace inst fifo_top_0 -pg 1 -lvl 4 -x 1330 -y 300 -defaultsOSRD
preplace inst mdyFmcAd9653_top_0 -pg 1 -lvl 5 -x 1710 -y 400 -defaultsOSRD
preplace netloc cpu_clk_1 1 0 4 -90 200 420 120 N 120 1140
preplace netloc cpu_rstn_1 1 0 4 -80 210 400 130 690 360 N
preplace netloc external_trig_0_1 1 0 2 -110 270 N
preplace netloc reset_1 1 0 4 -110J -80 N -80 N -80 1170
preplace netloc mdyFmcAd9653_top_0_clk_125M 1 1 5 410 410 700 410 1130 580 NJ 580 1870
preplace netloc mdyFmcAd9653_top_0_ADC_SYNC 1 5 1 1880 480n
preplace netloc mdyFmcAd9653_top_0_LED 1 5 1 1890 330n
preplace netloc mdyFmcAd9653_top_0_F_CLK_SEL 1 5 1 1870 300n
preplace netloc mdyFmcAd9653_top_0_PLL_SCLK 1 5 1 1870 320n
preplace netloc mdyFmcAd9653_top_0_PLL_CS 1 5 1 1880 340n
preplace netloc mdyFmcAd9653_top_0_PLL_SDIO 1 5 1 1880 380n
preplace netloc mdyFmcAd9653_top_0_ADC_SCLK 1 5 1 1880 400n
preplace netloc mdyFmcAd9653_top_0_AD1_CSB 1 5 1 1890 420n
preplace netloc mdyFmcAd9653_top_0_ADC_SDIO 1 5 1 1880 460n
preplace netloc PLL_CLK_P_1 1 0 5 NJ 370 N 370 NJ 370 1110 450 1470
preplace netloc PLL_CLK_N_1 1 0 5 NJ 410 390 400 NJ 400 1100 440 1480
preplace netloc PLL_SDO_1 1 0 5 NJ 430 390 420 NJ 420 1090 460 1490
preplace netloc EXT_PLL_LOCK_1 1 0 5 NJ 390 N 390 NJ 390 1120 430 N
preplace netloc mdyFmcAd9653_top_0_PLL_RESETN 1 5 1 1870 410n
preplace netloc ad9653_ifc_p_0_1 1 0 5 -90J 460 400 430 NJ 430 1080 480 1500
preplace netloc ad9653_ifc_n_0_1 1 0 5 NJ 470 420 440 NJ 440 1070 470 N
preplace netloc proc_sys_reset_0_interconnect_aresetn 1 3 3 1080J 570 NJ 570 1880
preplace netloc CLK_200M_N_1 1 0 5 NJ 350 NJ 350 NJ 350 1150J 420 1460
preplace netloc CLK_200M_P_1 1 0 5 NJ 320 390J 110 NJ 110 NJ 110 1490
preplace netloc axi_interconnect_0_M00_AXI 1 1 1 410 50n
preplace netloc fifo_top_0_rd_axis 1 4 2 1460J 230 1870
preplace netloc trigger_0_M_AXI 1 2 2 N 230 1150
preplace netloc axi_interconnect_0_M01_AXI 1 1 3 NJ 70 N 70 1160
preplace netloc S_AXI_DAQ_1 1 0 1 -100 -20n
levelinfo -pg 1 -130 240 570 900 1330 1710 1910
pagesize -pg 1 -db -bbox -sgen -320 -200 2080 860
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: CPU_TOP
proc create_hier_cell_CPU_TOP { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_CPU_TOP() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO2_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M00_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M02_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M10_AXI_DAQ

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 cmu2cpu_axis

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 cpu2cmu_axis


  # Create pins
  create_bd_pin -dir I cmu_clk
  create_bd_pin -dir I cmu_rstn
  create_bd_pin -dir I -type clk cpu_clk
  create_bd_pin -dir O -from 0 -to 0 -type rst cpu_rstn
  create_bd_pin -dir I -type rst ext_reset_in
  create_bd_pin -dir O -from 2 -to 0 gpo_0
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_reset
  create_bd_pin -dir O -from 2 -to 0 spi_clks_0
  create_bd_pin -dir O -from 2 -to 0 spi_csns_0
  create_bd_pin -dir I -from 2 -to 0 spi_sdis_0
  create_bd_pin -dir O -from 2 -to 0 spi_sdos_0

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_ALL_OUTPUTS_2 {0} \
   CONFIG.C_GPIO2_WIDTH {8} \
   CONFIG.C_GPIO_WIDTH {8} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_0

  # Create instance: axi_iic_0, and set properties
  set axi_iic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0 ]
  set_property -dict [ list \
   CONFIG.C_DEFAULT_VALUE {0xFF} \
   CONFIG.C_GPO_WIDTH {3} \
   CONFIG.C_SCL_INERTIAL_DELAY {5} \
   CONFIG.C_SDA_INERTIAL_DELAY {5} \
 ] $axi_iic_0

  # Create instance: axi_intc_0, and set properties
  set axi_intc_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 axi_intc_0 ]

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_SS_BITS {3} \
 ] $axi_quad_spi_0

  # Create instance: axi_timer_0, and set properties
  set axi_timer_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_timer:2.0 axi_timer_0 ]

  # Create instance: cpu_ram
  create_hier_cell_cpu_ram $hier_obj cpu_ram

  # Create instance: mb_lmb
  create_hier_cell_mb_lmb $hier_obj mb_lmb

  # Create instance: mdm_0, and set properties
  set mdm_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_0 ]
  set_property -dict [ list \
   CONFIG.C_DBG_MEM_ACCESS {0} \
   CONFIG.C_DBG_REG_ACCESS {0} \
   CONFIG.C_S_AXI_ADDR_WIDTH {4} \
   CONFIG.C_USE_UART {1} \
 ] $mdm_0

  # Create instance: microblaze_0, and set properties
  set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0 ]
  set_property -dict [ list \
   CONFIG.C_ADDR_TAG_BITS {0} \
   CONFIG.C_AREA_OPTIMIZED {0} \
   CONFIG.C_DCACHE_ADDR_TAG {0} \
   CONFIG.C_D_AXI {1} \
 ] $microblaze_0

  # Create instance: microblaze_0_axi_periph, and set properties
  set microblaze_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 microblaze_0_axi_periph ]
  set_property -dict [ list \
   CONFIG.NUM_MI {11} \
 ] $microblaze_0_axi_periph

  # Create instance: rst_clk_wiz_100M, and set properties
  set rst_clk_wiz_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_clk_wiz_100M ]

  # Create instance: spi_io_0, and set properties
  set spi_io_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:spi_io:1.0 spi_io_0 ]

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {3} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins GPIO_0] [get_bd_intf_pins axi_gpio_0/GPIO]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins GPIO2_0] [get_bd_intf_pins axi_gpio_0/GPIO2]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins IIC_0] [get_bd_intf_pins axi_iic_0/IIC]
  connect_bd_intf_net -intf_net axi_intc_0_interrupt [get_bd_intf_pins axi_intc_0/interrupt] [get_bd_intf_pins microblaze_0/INTERRUPT]
  connect_bd_intf_net -intf_net cpu_ram_cpu2udp_axis [get_bd_intf_pins cpu2cmu_axis] [get_bd_intf_pins cpu_ram/cpu2cmu_axis]
  connect_bd_intf_net -intf_net mdm_0_MBDEBUG_0 [get_bd_intf_pins mdm_0/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
  connect_bd_intf_net -intf_net microblaze_0_DLMB [get_bd_intf_pins mb_lmb/DLMB] [get_bd_intf_pins microblaze_0/DLMB]
  connect_bd_intf_net -intf_net microblaze_0_ILMB [get_bd_intf_pins mb_lmb/ILMB] [get_bd_intf_pins microblaze_0/ILMB]
  connect_bd_intf_net -intf_net microblaze_0_M_AXI_DP [get_bd_intf_pins microblaze_0/M_AXI_DP] [get_bd_intf_pins microblaze_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M00_AXI [get_bd_intf_pins M00_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M01_AXI [get_bd_intf_pins mdm_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M01_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M02_AXI [get_bd_intf_pins M02_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M02_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M03_AXI [get_bd_intf_pins axi_intc_0/s_axi] [get_bd_intf_pins microblaze_0_axi_periph/M03_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M04_AXI [get_bd_intf_pins axi_timer_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M04_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M05_AXI [get_bd_intf_pins cpu_ram/cpu_bram_S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M05_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M06_AXI [get_bd_intf_pins cpu_ram/cpu_ram_S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M06_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M07_AXI [get_bd_intf_pins axi_quad_spi_0/AXI_LITE] [get_bd_intf_pins microblaze_0_axi_periph/M07_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M08_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M08_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M09_AXI [get_bd_intf_pins axi_iic_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M09_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M10_AXI [get_bd_intf_pins M10_AXI_DAQ] [get_bd_intf_pins microblaze_0_axi_periph/M10_AXI]
  connect_bd_intf_net -intf_net udp2cpu_axis_1 [get_bd_intf_pins cmu2cpu_axis] [get_bd_intf_pins cpu_ram/cmu2cpu_axis]

  # Create port connections
  connect_bd_net -net LMB_Rst_1 [get_bd_pins cpu_ram/rst] [get_bd_pins mb_lmb/LMB_Rst] [get_bd_pins rst_clk_wiz_100M/bus_struct_reset]
  connect_bd_net -net Net [get_bd_pins axi_quad_spi_0/sck_i] [get_bd_pins axi_quad_spi_0/sck_o] [get_bd_pins spi_io_0/spi_clk]
  connect_bd_net -net Net1 [get_bd_pins axi_quad_spi_0/io0_i] [get_bd_pins axi_quad_spi_0/io0_o] [get_bd_pins spi_io_0/spi_sdo]
  connect_bd_net -net Net2 [get_bd_pins axi_quad_spi_0/ss_i] [get_bd_pins axi_quad_spi_0/ss_o] [get_bd_pins spi_io_0/spi_csn]
  connect_bd_net -net axi_iic_0_gpo [get_bd_pins gpo_0] [get_bd_pins axi_iic_0/gpo]
  connect_bd_net -net axi_timer_0_interrupt [get_bd_pins axi_timer_0/interrupt] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net clk_wiz_clk_out1 [get_bd_pins cpu_clk] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_iic_0/s_axi_aclk] [get_bd_pins axi_intc_0/s_axi_aclk] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins axi_timer_0/s_axi_aclk] [get_bd_pins cpu_ram/cpu_clk] [get_bd_pins mb_lmb/LMB_Clk] [get_bd_pins mdm_0/S_AXI_ACLK] [get_bd_pins microblaze_0/Clk] [get_bd_pins microblaze_0_axi_periph/ACLK] [get_bd_pins microblaze_0_axi_periph/M00_ACLK] [get_bd_pins microblaze_0_axi_periph/M01_ACLK] [get_bd_pins microblaze_0_axi_periph/M02_ACLK] [get_bd_pins microblaze_0_axi_periph/M03_ACLK] [get_bd_pins microblaze_0_axi_periph/M04_ACLK] [get_bd_pins microblaze_0_axi_periph/M05_ACLK] [get_bd_pins microblaze_0_axi_periph/M06_ACLK] [get_bd_pins microblaze_0_axi_periph/M07_ACLK] [get_bd_pins microblaze_0_axi_periph/M08_ACLK] [get_bd_pins microblaze_0_axi_periph/M09_ACLK] [get_bd_pins microblaze_0_axi_periph/M10_ACLK] [get_bd_pins microblaze_0_axi_periph/S00_ACLK] [get_bd_pins rst_clk_wiz_100M/slowest_sync_clk]
  connect_bd_net -net cpu_ram_cpu_ram_intr_o [get_bd_pins cpu_ram/cpu_ram_intr_o] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net ddr_ctrl_top_0_ui_rst_n [get_bd_pins ext_reset_in] [get_bd_pins rst_clk_wiz_100M/ext_reset_in]
  connect_bd_net -net mdm_0_Debug_SYS_Rst [get_bd_pins mdm_0/Debug_SYS_Rst] [get_bd_pins rst_clk_wiz_100M/mb_debug_sys_rst]
  connect_bd_net -net mdm_0_Interrupt [get_bd_pins mdm_0/Interrupt] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net rst_clk_wiz_100M_mb_reset [get_bd_pins microblaze_0/Reset] [get_bd_pins rst_clk_wiz_100M/mb_reset]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_aresetn [get_bd_pins cpu_rstn] [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_iic_0/s_axi_aresetn] [get_bd_pins axi_intc_0/s_axi_aresetn] [get_bd_pins axi_quad_spi_0/s_axi_aresetn] [get_bd_pins axi_timer_0/s_axi_aresetn] [get_bd_pins cpu_ram/cpu_rstn] [get_bd_pins mdm_0/S_AXI_ARESETN] [get_bd_pins microblaze_0_axi_periph/ARESETN] [get_bd_pins microblaze_0_axi_periph/M00_ARESETN] [get_bd_pins microblaze_0_axi_periph/M01_ARESETN] [get_bd_pins microblaze_0_axi_periph/M02_ARESETN] [get_bd_pins microblaze_0_axi_periph/M03_ARESETN] [get_bd_pins microblaze_0_axi_periph/M04_ARESETN] [get_bd_pins microblaze_0_axi_periph/M05_ARESETN] [get_bd_pins microblaze_0_axi_periph/M06_ARESETN] [get_bd_pins microblaze_0_axi_periph/M07_ARESETN] [get_bd_pins microblaze_0_axi_periph/M08_ARESETN] [get_bd_pins microblaze_0_axi_periph/M09_ARESETN] [get_bd_pins microblaze_0_axi_periph/M10_ARESETN] [get_bd_pins microblaze_0_axi_periph/S00_ARESETN] [get_bd_pins rst_clk_wiz_100M/peripheral_aresetn]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_reset [get_bd_pins peripheral_reset] [get_bd_pins rst_clk_wiz_100M/peripheral_reset]
  connect_bd_net -net spi_io_0_spi_clks [get_bd_pins spi_clks_0] [get_bd_pins spi_io_0/spi_clks]
  connect_bd_net -net spi_io_0_spi_csns [get_bd_pins spi_csns_0] [get_bd_pins spi_io_0/spi_csns]
  connect_bd_net -net spi_io_0_spi_sdi [get_bd_pins axi_quad_spi_0/io1_i] [get_bd_pins spi_io_0/spi_sdi]
  connect_bd_net -net spi_io_0_spi_sdos [get_bd_pins spi_sdos_0] [get_bd_pins spi_io_0/spi_sdos]
  connect_bd_net -net spi_sdis_0_1 [get_bd_pins spi_sdis_0] [get_bd_pins spi_io_0/spi_sdis]
  connect_bd_net -net udp_clk_1 [get_bd_pins cmu_clk] [get_bd_pins cpu_ram/cmu_clk]
  connect_bd_net -net udp_rstn_1 [get_bd_pins cmu_rstn] [get_bd_pins cpu_ram/cmu_rstn]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins axi_intc_0/intr] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: COMM_TOP
proc create_hier_cell_COMM_TOP { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_COMM_TOP() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 cmu2cpu_axis

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 cmu2mem_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 cmu_S_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 cpu2cmu_axis

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 gt_sfp_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 gt_sfp_refclk_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 mem2cmu_axis


  # Create pins
  create_bd_pin -dir I clk_125mhz
  create_bd_pin -dir I -type rst cpu_rstn
  create_bd_pin -dir O -type clk eth_clk
  create_bd_pin -dir O -type rst eth_rstn
  create_bd_pin -dir I -type clk mem_clk
  create_bd_pin -dir I -type rst mem_rstn

  # Create instance: cmu2cpu_fifo, and set properties
  set cmu2cpu_fifo [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 cmu2cpu_fifo ]

  # Create instance: cmu2cpu_width_conv, and set properties
  set cmu2cpu_width_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 cmu2cpu_width_conv ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
 ] $cmu2cpu_width_conv

  # Create instance: cmu2mem_width_conv, and set properties
  set cmu2mem_width_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 cmu2mem_width_conv ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {1} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
 ] $cmu2mem_width_conv

  # Create instance: cpu2cmu_fifo, and set properties
  set cpu2cmu_fifo [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 cpu2cmu_fifo ]
  set_property -dict [ list \
   CONFIG.FIFO_MODE {2} \
 ] $cpu2cmu_fifo

  # Create instance: cpu2cmu_width_conv, and set properties
  set cpu2cmu_width_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 cpu2cmu_width_conv ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {1} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $cpu2cmu_width_conv

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4S} \
 ] $ila_0

  # Create instance: ila_1, and set properties
  set ila_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_1 ]
  set_property -dict [ list \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4S} \
 ] $ila_1

  # Create instance: ila_2, and set properties
  set ila_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_2 ]
  set_property -dict [ list \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4S} \
 ] $ila_2

  # Create instance: mem2cmu_clock_conv, and set properties
  set mem2cmu_clock_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 mem2cmu_clock_conv ]

  # Create instance: mem2cmu_width_conv, and set properties
  set mem2cmu_width_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 mem2cmu_width_conv ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {0} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
 ] $mem2cmu_width_conv

  # Create instance: tcpip_core_0, and set properties
  set tcpip_core_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:tcpip_core:1.0 tcpip_core_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins mem2cmu_clock_conv/M_AXIS] [get_bd_intf_pins mem2cmu_width_conv/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins cpu2cmu_fifo/M_AXIS] [get_bd_intf_pins tcpip_core_0/tcp0_s_axis]
  connect_bd_intf_net -intf_net [get_bd_intf_nets axis_dwidth_converter_0_M_AXIS] [get_bd_intf_pins cpu2cmu_fifo/M_AXIS] [get_bd_intf_pins ila_2/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_1_M00_AXIS [get_bd_intf_pins cmu2mem_axis] [get_bd_intf_pins cmu2mem_width_conv/M_AXIS]
  connect_bd_intf_net -intf_net [get_bd_intf_nets axis_interconnect_1_M00_AXIS] [get_bd_intf_pins cmu2mem_axis] [get_bd_intf_pins ila_0/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net cmu2cpu_dido_M_AXIS [get_bd_intf_pins cmu2cpu_fifo/M_AXIS] [get_bd_intf_pins cmu2cpu_width_conv/S_AXIS]
  connect_bd_intf_net -intf_net cmu2cpu_width_conv_M_AXIS [get_bd_intf_pins cmu2cpu_axis] [get_bd_intf_pins cmu2cpu_width_conv/M_AXIS]
  connect_bd_intf_net -intf_net [get_bd_intf_nets cmu2cpu_width_conv_M_AXIS] [get_bd_intf_pins cmu2cpu_axis] [get_bd_intf_pins ila_1/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net cmu_S_AXI_1 [get_bd_intf_pins cmu_S_AXI] [get_bd_intf_pins tcpip_core_0/S_AXI]
  connect_bd_intf_net -intf_net cpu2cmu_axis_1 [get_bd_intf_pins cpu2cmu_axis] [get_bd_intf_pins cpu2cmu_width_conv/S_AXIS]
  connect_bd_intf_net -intf_net cpu2cmu_width_conv_M_AXIS [get_bd_intf_pins cpu2cmu_fifo/S_AXIS] [get_bd_intf_pins cpu2cmu_width_conv/M_AXIS]
  connect_bd_intf_net -intf_net ddr_ctrl_top_0_M_AXIS [get_bd_intf_pins mem2cmu_axis] [get_bd_intf_pins mem2cmu_clock_conv/S_AXIS]
  connect_bd_intf_net -intf_net gt_sfp_refclk_0_1 [get_bd_intf_pins gt_sfp_refclk_0] [get_bd_intf_pins tcpip_core_0/gt_sfp_refclk]
  connect_bd_intf_net -intf_net mem2cmu_width_conv_M_AXIS [get_bd_intf_pins mem2cmu_width_conv/M_AXIS] [get_bd_intf_pins tcpip_core_0/tcp1_s_axis]
  connect_bd_intf_net -intf_net tcpip_core_0_gt_sfp [get_bd_intf_pins gt_sfp_0] [get_bd_intf_pins tcpip_core_0/gt_sfp]
  connect_bd_intf_net -intf_net tcpip_core_0_tcp0_m_axis [get_bd_intf_pins cmu2cpu_fifo/S_AXIS] [get_bd_intf_pins tcpip_core_0/tcp0_m_axis]
  connect_bd_intf_net -intf_net tcpip_core_0_tcp1_m_axis [get_bd_intf_pins cmu2mem_width_conv/S_AXIS] [get_bd_intf_pins tcpip_core_0/tcp1_m_axis]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins mem_clk] [get_bd_pins mem2cmu_clock_conv/s_axis_aclk]
  connect_bd_net -net Net [get_bd_pins eth_clk] [get_bd_pins cmu2cpu_fifo/s_axis_aclk] [get_bd_pins cmu2cpu_width_conv/aclk] [get_bd_pins cmu2mem_width_conv/aclk] [get_bd_pins cpu2cmu_fifo/s_axis_aclk] [get_bd_pins cpu2cmu_width_conv/aclk] [get_bd_pins ila_0/clk] [get_bd_pins ila_1/clk] [get_bd_pins ila_2/clk] [get_bd_pins mem2cmu_clock_conv/m_axis_aclk] [get_bd_pins mem2cmu_width_conv/aclk] [get_bd_pins tcpip_core_0/axis_aclk]
  connect_bd_net -net Net1 [get_bd_pins eth_rstn] [get_bd_pins cmu2cpu_fifo/s_axis_aresetn] [get_bd_pins cmu2cpu_width_conv/aresetn] [get_bd_pins cmu2mem_width_conv/aresetn] [get_bd_pins cpu2cmu_fifo/s_axis_aresetn] [get_bd_pins cpu2cmu_width_conv/aresetn] [get_bd_pins mem2cmu_clock_conv/m_axis_aresetn] [get_bd_pins mem2cmu_width_conv/aresetn] [get_bd_pins tcpip_core_0/axis_aresetn]
  connect_bd_net -net clk_wiz_clk_out1 [get_bd_pins clk_125mhz] [get_bd_pins tcpip_core_0/S_AXI_aclk] [get_bd_pins tcpip_core_0/clk_125mhz]
  connect_bd_net -net ddr_ctrl_top_0_ui_rst_n [get_bd_pins mem_rstn] [get_bd_pins mem2cmu_clock_conv/s_axis_aresetn]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_aresetn [get_bd_pins cpu_rstn] [get_bd_pins tcpip_core_0/S_AXI_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set GPIO2_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO2_0 ]

  set GPIO_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO_0 ]

  set IIC [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC ]

  set c0_ddr4_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 c0_ddr4_0 ]

  set gt_sfp_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 gt_sfp_0 ]

  set gt_sfp_refclk_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 gt_sfp_refclk_0 ]


  # Create ports
  set AD1_CSB [ create_bd_port -dir O -from 0 -to 0 AD1_CSB ]
  set ADC_SCLK [ create_bd_port -dir O -from 0 -to 0 ADC_SCLK ]
  set ADC_SDIO [ create_bd_port -dir O -from 0 -to 0 ADC_SDIO ]
  set CLK_200MM_N [ create_bd_port -dir I CLK_200MM_N ]
  set CLK_200MM_P [ create_bd_port -dir I CLK_200MM_P ]
  set EXT_PLL_LOCK [ create_bd_port -dir I -from 0 -to 0 EXT_PLL_LOCK ]
  set F_CLK_SEL [ create_bd_port -dir O -from 0 -to 0 F_CLK_SEL ]
  set LED [ create_bd_port -dir O -from 3 -to 0 LED ]
  set PLL_CLK_N [ create_bd_port -dir I -from 0 -to 0 PLL_CLK_N ]
  set PLL_CLK_P [ create_bd_port -dir I -from 0 -to 0 PLL_CLK_P ]
  set PLL_CS [ create_bd_port -dir O -from 0 -to 0 PLL_CS ]
  set PLL_RESETN [ create_bd_port -dir O -from 0 -to 0 PLL_RESETN ]
  set PLL_SCLK [ create_bd_port -dir O -from 0 -to 0 PLL_SCLK ]
  set PLL_SDIO [ create_bd_port -dir O -from 0 -to 0 PLL_SDIO ]
  set PLL_SDO [ create_bd_port -dir I -from 0 -to 0 PLL_SDO ]
  set ad9653_ifc_n_0 [ create_bd_port -dir I -from 9 -to 0 ad9653_ifc_n_0 ]
  set ad9653_ifc_p_0 [ create_bd_port -dir I -from 9 -to 0 ad9653_ifc_p_0 ]
  set adc_sync_0 [ create_bd_port -dir O -from 0 -to 0 adc_sync_0 ]
  set c0_sys_clk_n [ create_bd_port -dir I c0_sys_clk_n ]
  set c0_sys_clk_p [ create_bd_port -dir I c0_sys_clk_p ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset
  set spi_clks_0 [ create_bd_port -dir O -from 2 -to 0 spi_clks_0 ]
  set spi_csns_0 [ create_bd_port -dir O -from 2 -to 0 spi_csns_0 ]
  set spi_sdis_0 [ create_bd_port -dir I -from 2 -to 0 spi_sdis_0 ]
  set spi_sdos_0 [ create_bd_port -dir O -from 2 -to 0 spi_sdos_0 ]
  set trig_input [ create_bd_port -dir I trig_input ]

  # Create instance: COMM_TOP
  create_hier_cell_COMM_TOP [current_bd_instance .] COMM_TOP

  # Create instance: CPU_TOP
  create_hier_cell_CPU_TOP [current_bd_instance .] CPU_TOP

  # Create instance: DAQ_TOP
  create_hier_cell_DAQ_TOP [current_bd_instance .] DAQ_TOP

  # Create instance: MEM_TOP
  create_hier_cell_MEM_TOP [current_bd_instance .] MEM_TOP

  # Create instance: rst_inv, and set properties
  set rst_inv [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 rst_inv ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $rst_inv

  # Create interface connections
  connect_bd_intf_net -intf_net COMM_TOP_cmu2cpu_axis [get_bd_intf_pins COMM_TOP/cmu2cpu_axis] [get_bd_intf_pins CPU_TOP/cmu2cpu_axis]
  connect_bd_intf_net -intf_net CPU_TOP_GPIO2_0 [get_bd_intf_ports GPIO2_0] [get_bd_intf_pins CPU_TOP/GPIO2_0]
  connect_bd_intf_net -intf_net CPU_TOP_GPIO_0 [get_bd_intf_ports GPIO_0] [get_bd_intf_pins CPU_TOP/GPIO_0]
  connect_bd_intf_net -intf_net CPU_TOP_IIC_0 [get_bd_intf_ports IIC] [get_bd_intf_pins CPU_TOP/IIC_0]
  connect_bd_intf_net -intf_net CPU_TOP_M10_AXI_DAQ [get_bd_intf_pins CPU_TOP/M10_AXI_DAQ] [get_bd_intf_pins DAQ_TOP/S_AXI_DAQ]
  connect_bd_intf_net -intf_net CPU_TOP_cpu2udp_axis [get_bd_intf_pins COMM_TOP/cpu2cmu_axis] [get_bd_intf_pins CPU_TOP/cpu2cmu_axis]
  connect_bd_intf_net -intf_net MEM_TOP_c0_ddr4_0 [get_bd_intf_ports c0_ddr4_0] [get_bd_intf_pins MEM_TOP/c0_ddr4_0]
  connect_bd_intf_net -intf_net S_daq2mem_axis_1 [get_bd_intf_pins DAQ_TOP/m_rd_axis] [get_bd_intf_pins MEM_TOP/S_daq2mem_axis]
  connect_bd_intf_net -intf_net ddr_ctrl_top_0_M_AXIS [get_bd_intf_pins COMM_TOP/mem2cmu_axis] [get_bd_intf_pins MEM_TOP/M_AXIS]
  connect_bd_intf_net -intf_net gt_sfp_refclk_0_1 [get_bd_intf_ports gt_sfp_refclk_0] [get_bd_intf_pins COMM_TOP/gt_sfp_refclk_0]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M00_AXI [get_bd_intf_pins CPU_TOP/M00_AXI] [get_bd_intf_pins MEM_TOP/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M02_AXI [get_bd_intf_pins COMM_TOP/cmu_S_AXI] [get_bd_intf_pins CPU_TOP/M02_AXI]
  connect_bd_intf_net -intf_net udp_2_mem_process_0_m_axis [get_bd_intf_pins COMM_TOP/cmu2mem_axis] [get_bd_intf_pins MEM_TOP/S_AXIS]
  connect_bd_intf_net -intf_net udp_eth_0_gt_sfp [get_bd_intf_ports gt_sfp_0] [get_bd_intf_pins COMM_TOP/gt_sfp_0]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins COMM_TOP/mem_clk] [get_bd_pins MEM_TOP/mem_clk]
  connect_bd_net -net CLK_200MM_N_1 [get_bd_ports CLK_200MM_N] [get_bd_pins DAQ_TOP/CLK_200M_N]
  connect_bd_net -net CLK_200MM_P_1 [get_bd_ports CLK_200MM_P] [get_bd_pins DAQ_TOP/CLK_200M_P]
  connect_bd_net -net CPU_TOP_spi_clks_0 [get_bd_ports spi_clks_0] [get_bd_pins CPU_TOP/spi_clks_0]
  connect_bd_net -net CPU_TOP_spi_csns_0 [get_bd_ports spi_csns_0] [get_bd_pins CPU_TOP/spi_csns_0]
  connect_bd_net -net CPU_TOP_spi_sdos_0 [get_bd_ports spi_sdos_0] [get_bd_pins CPU_TOP/spi_sdos_0]
  connect_bd_net -net DAQ_TOP_AD1_CSB [get_bd_ports AD1_CSB] [get_bd_pins DAQ_TOP/AD1_CSB]
  connect_bd_net -net DAQ_TOP_ADC_SCLK [get_bd_ports ADC_SCLK] [get_bd_pins DAQ_TOP/ADC_SCLK]
  connect_bd_net -net DAQ_TOP_ADC_SDIO [get_bd_ports ADC_SDIO] [get_bd_pins DAQ_TOP/ADC_SDIO]
  connect_bd_net -net DAQ_TOP_F_CLK_SEL [get_bd_ports F_CLK_SEL] [get_bd_pins DAQ_TOP/F_CLK_SEL]
  connect_bd_net -net DAQ_TOP_LED [get_bd_ports LED] [get_bd_pins DAQ_TOP/LED]
  connect_bd_net -net DAQ_TOP_PLL_CS [get_bd_ports PLL_CS] [get_bd_pins DAQ_TOP/PLL_CS]
  connect_bd_net -net DAQ_TOP_PLL_RESETN [get_bd_ports PLL_RESETN] [get_bd_pins DAQ_TOP/PLL_RESETN]
  connect_bd_net -net DAQ_TOP_PLL_SCLK [get_bd_ports PLL_SCLK] [get_bd_pins DAQ_TOP/PLL_SCLK]
  connect_bd_net -net DAQ_TOP_PLL_SDIO [get_bd_ports PLL_SDIO] [get_bd_pins DAQ_TOP/PLL_SDIO]
  connect_bd_net -net DAQ_TOP_adc_sync_0 [get_bd_ports adc_sync_0] [get_bd_pins DAQ_TOP/adc_sync_0]
  connect_bd_net -net DAQ_TOP_daq_rstn [get_bd_pins DAQ_TOP/daq_rstn] [get_bd_pins MEM_TOP/daq_rstn]
  connect_bd_net -net EXT_PLL_LOCK_0_1 [get_bd_ports EXT_PLL_LOCK] [get_bd_pins DAQ_TOP/EXT_PLL_LOCK]
  connect_bd_net -net Net [get_bd_pins COMM_TOP/eth_clk] [get_bd_pins CPU_TOP/cmu_clk] [get_bd_pins MEM_TOP/eth_clk]
  connect_bd_net -net Net1 [get_bd_pins COMM_TOP/eth_rstn] [get_bd_pins CPU_TOP/cmu_rstn] [get_bd_pins MEM_TOP/eth_rstn]
  connect_bd_net -net PLL_CLK_N_0_1 [get_bd_ports PLL_CLK_N] [get_bd_pins DAQ_TOP/PLL_CLK_N]
  connect_bd_net -net PLL_CLK_P_0_1 [get_bd_ports PLL_CLK_P] [get_bd_pins DAQ_TOP/PLL_CLK_P]
  connect_bd_net -net PLL_SDO_0_1 [get_bd_ports PLL_SDO] [get_bd_pins DAQ_TOP/PLL_SDO]
  connect_bd_net -net ad9653_ifc_n_0_1 [get_bd_ports ad9653_ifc_n_0] [get_bd_pins DAQ_TOP/ad9653_ifc_n_0]
  connect_bd_net -net ad9653_ifc_p_0_1 [get_bd_ports ad9653_ifc_p_0] [get_bd_pins DAQ_TOP/ad9653_ifc_p_0]
  connect_bd_net -net c0_sys_clk_n_1 [get_bd_ports c0_sys_clk_n] [get_bd_pins MEM_TOP/c0_sys_clk_n]
  connect_bd_net -net c0_sys_clk_p_1 [get_bd_ports c0_sys_clk_p] [get_bd_pins MEM_TOP/c0_sys_clk_p]
  connect_bd_net -net clk_wiz_clk_out1 [get_bd_pins COMM_TOP/clk_125mhz] [get_bd_pins CPU_TOP/cpu_clk] [get_bd_pins DAQ_TOP/cpu_clk] [get_bd_pins MEM_TOP/cpu_clk]
  connect_bd_net -net daq_clk_1 [get_bd_pins DAQ_TOP/daq_clk] [get_bd_pins MEM_TOP/daq_clk]
  connect_bd_net -net ddr_ctrl_top_0_ui_rst_n [get_bd_pins COMM_TOP/mem_rstn] [get_bd_pins MEM_TOP/mem_rstn]
  connect_bd_net -net ext_reset_in_1 [get_bd_pins CPU_TOP/ext_reset_in] [get_bd_pins DAQ_TOP/reset] [get_bd_pins rst_inv/Res]
  connect_bd_net -net external_trig_0_1 [get_bd_ports trig_input] [get_bd_pins DAQ_TOP/external_trig_0]
  connect_bd_net -net reset_1 [get_bd_ports reset] [get_bd_pins rst_inv/Op1]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_aresetn [get_bd_pins COMM_TOP/cpu_rstn] [get_bd_pins CPU_TOP/cpu_rstn] [get_bd_pins DAQ_TOP/cpu_rstn] [get_bd_pins MEM_TOP/cpu_rstn]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_reset [get_bd_pins CPU_TOP/peripheral_reset] [get_bd_pins MEM_TOP/sys_rst]
  connect_bd_net -net spi_sdis_0_1 [get_bd_ports spi_sdis_0] [get_bd_pins CPU_TOP/spi_sdis_0]

  # Create address segments
  assign_bd_address -offset 0x00170000 -range 0x00002000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/cpu_ram/axi_bram_ctrl_0/S_AXI/Mem0] -force
  assign_bd_address -offset 0x00110000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/axi_gpio_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00120000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/axi_iic_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00130000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/axi_intc_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00150000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/axi_quad_spi_0/AXI_LITE/Reg] -force
  assign_bd_address -offset 0x00160000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/axi_timer_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00180000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/cpu_ram/cpu_ram_0/S_AXI/reg0] -force
  assign_bd_address -offset 0x00140000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs MEM_TOP/ddr_ctrl_top_1/S_AXI/reg0] -force
  assign_bd_address -offset 0x00000000 -range 0x00020000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/mb_lmb/dlmb_bram_if_cntlr/SLMB/Mem] -force
  assign_bd_address -offset 0x001B0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs DAQ_TOP/fifo_top_0/S_AXI/reg0] -force
  assign_bd_address -offset 0x00000000 -range 0x00020000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Instruction] [get_bd_addr_segs CPU_TOP/mb_lmb/ilmb_bram_if_cntlr/SLMB/Mem] -force
  assign_bd_address -offset 0x00190000 -range 0x00001000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs CPU_TOP/mdm_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00100000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs COMM_TOP/tcpip_core_0/S_AXI/reg0] -force
  assign_bd_address -offset 0x001A0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU_TOP/microblaze_0/Data] [get_bd_addr_segs DAQ_TOP/trigger_0/S_AXI/reg0] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"No Loops",
   "Addressing View_Layers":"/COMM_TOP/Net1:false|/COMM_TOP/Net:false|/CPU_TOP/axi_timer_0_interrupt:false|/CPU_TOP/mdm_0_Interrupt:false|/CPU_TOP/mdm_0_Debug_SYS_Rst:false|/CPU_TOP/LMB_Rst_1:false|/MEM_TOP/clk_wiz_clk_out1:false|/CPU_TOP/rst_clk_wiz_100M_peripheral_reset:false|/CPU_TOP/rst_clk_wiz_100M_peripheral_aresetn:false|/CPU_TOP/cpu_ram/cpu_ram_0_intr_o:false|/MEM_TOP/ddr_ctrl_top_0_ui_rst_n:false|/CPU_TOP/rst_clk_wiz_100M_mb_reset:false|/MEM_TOP/ACLK_1:false|/ext_reset_in_1:false|",
   "Addressing View_ScaleFactor":"0.983092",
   "Addressing View_TopLeft":"-146,-108",
   "Color Coded_ScaleFactor":"0.870899",
   "Color Coded_TopLeft":"-146,-100",
   "Default View_Layers":"/COMM_TOP/Net1:true|/COMM_TOP/Net:true|/CPU_TOP/axi_timer_0_interrupt:true|/CPU_TOP/mdm_0_Interrupt:true|/CPU_TOP/mdm_0_Debug_SYS_Rst:true|/CPU_TOP/LMB_Rst_1:true|/MEM_TOP/clk_wiz_clk_out1:true|/CPU_TOP/rst_clk_wiz_100M_peripheral_reset:true|/CPU_TOP/rst_clk_wiz_100M_peripheral_aresetn:true|/CPU_TOP/cpu_ram/cpu_ram_0_intr_o:true|/MEM_TOP/ddr_ctrl_top_0_ui_rst_n:true|/CPU_TOP/rst_clk_wiz_100M_mb_reset:true|/MEM_TOP/ACLK_1:true|/ext_reset_in_1:true|",
   "Default View_ScaleFactor":"0.889942",
   "Default View_TopLeft":"-146,-94",
   "Display-PortTypeClock":"true",
   "Display-PortTypeInterrupt":"true",
   "Display-PortTypeOthers":"true",
   "Display-PortTypeReset":"true",
   "ExpandedHierarchyInLayout":"",
   "Grouping and No Loops_ScaleFactor":"0.775",
   "Grouping and No Loops_TopLeft":"-232,0",
   "Interfaces View_ExpandedHierarchyInLayout":"",
   "Interfaces View_Layers":"/COMM_TOP/Net1:false|/COMM_TOP/Net:false|/CPU_TOP/axi_timer_0_interrupt:false|/CPU_TOP/mdm_0_Interrupt:false|/CPU_TOP/mdm_0_Debug_SYS_Rst:false|/CPU_TOP/LMB_Rst_1:false|/MEM_TOP/clk_wiz_clk_out1:false|/CPU_TOP/rst_clk_wiz_100M_peripheral_reset:false|/CPU_TOP/rst_clk_wiz_100M_peripheral_aresetn:false|/CPU_TOP/cpu_ram/cpu_ram_0_intr_o:false|/MEM_TOP/ddr_ctrl_top_0_ui_rst_n:false|/CPU_TOP/rst_clk_wiz_100M_mb_reset:false|/MEM_TOP/ACLK_1:false|/ext_reset_in_1:false|",
   "Interfaces View_Layout":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port c0_sys_0 -pg 1 -lvl 0 -x 0 -y 160 -defaultsOSRD
preplace port gt_sfp_0 -pg 1 -lvl 4 -x 940 -y 310 -defaultsOSRD
preplace port c0_ddr3_0 -pg 1 -lvl 4 -x 940 -y 170 -defaultsOSRD
preplace port gt_sfp_refclk_0 -pg 1 -lvl 0 -x 0 -y 340 -defaultsOSRD
preplace inst COMM_TOP -pg 1 -lvl 1 -x 190 -y 330 -defaultsOSRD
preplace inst MEM_TOP -pg 1 -lvl 3 -x 780 -y 160 -defaultsOSRD
preplace inst CPU_TOP -pg 1 -lvl 2 -x 480 -y 80 -defaultsOSRD
preplace netloc MEM_TOP_C0_DDR3_0 1 3 1 NJ 170
preplace netloc microblaze_0_axi_periph_M02_AXI 1 0 3 40 240 NJ 240 630
preplace netloc microblaze_0_axi_periph_M00_AXI 1 2 1 640 60n
preplace netloc c0_sys_clk_0_1 1 0 3 NJ 160 NJ 160 NJ
preplace netloc udp_2_mem_process_0_m_axis 1 1 2 NJ 330 640
preplace netloc udp_eth_0_gt_sfp 1 1 3 NJ 310 NJ 310 NJ
preplace netloc ddr_ctrl_top_0_M_AXIS 1 0 4 30 230 NJ 230 NJ 230 920
preplace netloc gt_sfp_refclk_0_1 1 0 1 NJ 340
preplace netloc CPU_TOP_cpu2udp_axis 1 0 3 20 150 NJ 150 620
preplace netloc COMM_TOP_cmu2cpu_axis 1 1 1 340 80n
levelinfo -pg 1 0 190 480 780 940
pagesize -pg 1 -db -bbox -sgen -150 0 1060 410
",
   "Interfaces View_ScaleFactor":"1.0",
   "Interfaces View_TopLeft":"-155,-43",
   "No Loops_ExpandedHierarchyInLayout":"",
   "No Loops_Layout":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port gt_sfp_0 -pg 1 -lvl 5 -x 2790 -y 550 -defaultsOSRD
preplace port gt_sfp_refclk_0 -pg 1 -lvl 0 -x -870 -y 320 -defaultsOSRD
preplace port GPIO_0 -pg 1 -lvl 5 -x 2790 -y 50 -defaultsOSRD
preplace port GPIO2_0 -pg 1 -lvl 5 -x 2790 -y 860 -defaultsOSRD
preplace port IIC -pg 1 -lvl 5 -x 2790 -y 880 -defaultsOSRD
preplace port c0_ddr4_0 -pg 1 -lvl 5 -x 2790 -y 920 -defaultsOSRD
preplace port reset -pg 1 -lvl 0 -x -870 -y 790 -defaultsOSRD
preplace port trig_input -pg 1 -lvl 0 -x -870 -y 900 -defaultsOSRD
preplace port CLK_200MM_N -pg 1 -lvl 0:w -x -870 -y 490 -defaultsOSRD
preplace port CLK_200MM_P -pg 1 -lvl 0 -x -870 -y 470 -defaultsOSRD
preplace port c0_sys_clk_p -pg 1 -lvl 0 -x -870 -y 630 -defaultsOSRD
preplace port c0_sys_clk_n -pg 1 -lvl 0 -x -870 -y 370 -defaultsOSRD
preplace portBus spi_sdis_0 -pg 1 -lvl 0 -x -870 -y 100 -defaultsOSRD
preplace portBus spi_clks_0 -pg 1 -lvl 5 -x 2790 -y 400 -defaultsOSRD
preplace portBus spi_sdos_0 -pg 1 -lvl 5 -x 2790 -y 440 -defaultsOSRD
preplace portBus spi_csns_0 -pg 1 -lvl 5 -x 2790 -y 420 -defaultsOSRD
preplace portBus ad9653_ifc_n_0 -pg 1 -lvl 0 -x -870 -y 340 -defaultsOSRD
preplace portBus ad9653_ifc_p_0 -pg 1 -lvl 0 -x -870 -y 880 -defaultsOSRD
preplace portBus adc_sync_0 -pg 1 -lvl 5 -x 2790 -y 130 -defaultsOSRD
preplace portBus AD1_CSB -pg 1 -lvl 5 -x 2790 -y 530 -defaultsOSRD
preplace portBus ADC_SCLK -pg 1 -lvl 5 -x 2790 -y 210 -defaultsOSRD
preplace portBus ADC_SDIO -pg 1 -lvl 5 -x 2790 -y 230 -defaultsOSRD
preplace portBus EXT_PLL_LOCK -pg 1 -lvl 0 -x -870 -y 230 -defaultsOSRD
preplace portBus F_CLK_SEL -pg 1 -lvl 5 -x 2790 -y 190 -defaultsOSRD
preplace portBus LED -pg 1 -lvl 5 -x 2790 -y 150 -defaultsOSRD
preplace portBus PLL_CLK_N -pg 1 -lvl 0 -x -870 -y 250 -defaultsOSRD
preplace portBus PLL_CLK_P -pg 1 -lvl 0 -x -870 -y 270 -defaultsOSRD
preplace portBus PLL_CS -pg 1 -lvl 5 -x 2790 -y 270 -defaultsOSRD
preplace portBus PLL_RESETN -pg 1 -lvl 5 -x 2790 -y 330 -defaultsOSRD
preplace portBus PLL_SCLK -pg 1 -lvl 5 -x 2790 -y 250 -defaultsOSRD
preplace portBus PLL_SDIO -pg 1 -lvl 5 -x 2790 -y 290 -defaultsOSRD
preplace portBus PLL_SDO -pg 1 -lvl 0 -x -870 -y 210 -defaultsOSRD
preplace inst COMM_TOP -pg 1 -lvl 2 -x 648 -y -620 -swap {31 1 2 3 4 5 26 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 47 27 28 29 30 38 32 33 34 35 36 37 0 39 40 41 42 43 44 45 46 6 48 49 50 51 52 53 54 56 55 57 58} -defaultsOSRD -pinDir mem2cmu_axis left -pinY mem2cmu_axis 100L -pinDir cmu_S_AXI right -pinY cmu_S_AXI 20R -pinDir gt_sfp_0 right -pinY gt_sfp_0 270R -pinDir cmu2mem_axis left -pinY cmu2mem_axis 120L -pinDir gt_sfp_refclk_0 left -pinY gt_sfp_refclk_0 0L -pinDir cpu2cmu_axis right -pinY cpu2cmu_axis 40R -pinDir cmu2cpu_axis right -pinY cmu2cpu_axis 0R -pinDir eth_clk right -pinY eth_clk 290R -pinDir eth_rstn right -pinY eth_rstn 310R -pinDir mem_rstn left -pinY mem_rstn 270L -pinDir mem_clk left -pinY mem_clk 250L -pinDir clk_125mhz left -pinY clk_125mhz 290L -pinDir cpu_rstn left -pinY cpu_rstn 310L
preplace inst MEM_TOP -pg 1 -lvl 1 -x -190 -y 360 -swap {6 1 2 3 4 5 0 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 48 34 35 36 37 38 39 40 41 42 43 44 45 46 47 33 49 50 51 52 57 61 53 54 60 59 58 55 56 63 62} -defaultsOSRD -pinDir M_AXIS right -pinY M_AXIS 30R -pinDir S_AXI right -pinY S_AXI 10R -pinDir S_AXIS right -pinY S_AXIS 50R -pinDir c0_ddr4_0 right -pinY c0_ddr4_0 90R -pinDir S_daq2mem_axis right -pinY S_daq2mem_axis 70R -pinDir cpu_clk right -pinY cpu_clk 190R -pinDir cpu_rstn right -pinY cpu_rstn 270R -pinDir mem_clk right -pinY mem_clk 110R -pinDir mem_rstn right -pinY mem_rstn 130R -pinDir sys_rst right -pinY sys_rst 250R -pinDir eth_rstn right -pinY eth_rstn 230R -pinDir eth_clk right -pinY eth_clk 210R -pinDir daq_clk right -pinY daq_clk 150R -pinDir daq_rstn right -pinY daq_rstn 170R -pinDir c0_sys_clk_p left -pinY c0_sys_clk_p 270L -pinDir c0_sys_clk_n left -pinY c0_sys_clk_n 10L
preplace inst CPU_TOP -pg 1 -lvl 3 -x 1440 -y 40 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 40 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 46 41 42 43 44 45 20 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 93 88 87 85 86 92 90 84 89 91} -defaultsOSRD -pinDir M00_AXI left -pinY M00_AXI 130L -pinDir M02_AXI left -pinY M02_AXI 210L -pinDir cpu2cmu_axis left -pinY cpu2cmu_axis 230L -pinDir cmu2cpu_axis left -pinY cmu2cpu_axis 190L -pinDir GPIO_0 right -pinY GPIO_0 0R -pinDir GPIO2_0 right -pinY GPIO2_0 60R -pinDir IIC_0 right -pinY IIC_0 230R -pinDir M10_AXI_DAQ right -pinY M10_AXI_DAQ 250R -pinDir cpu_clk left -pinY cpu_clk 250L -pinBusDir cpu_rstn right -pinBusY cpu_rstn 350R -pinDir ext_reset_in left -pinY ext_reset_in 330L -pinBusDir peripheral_reset left -pinBusY peripheral_reset 310L -pinDir cmu_clk left -pinY cmu_clk 270L -pinDir cmu_rstn left -pinY cmu_rstn 290L -pinBusDir gpo_0 right -pinBusY gpo_0 330R -pinBusDir spi_sdis_0 left -pinBusY spi_sdis_0 350L -pinBusDir spi_clks_0 right -pinBusY spi_clks_0 270R -pinBusDir spi_sdos_0 right -pinBusY spi_sdos_0 290R -pinBusDir spi_csns_0 right -pinBusY spi_csns_0 310R
preplace inst DAQ_TOP -pg 1 -lvl 4 -x 2301 -y 540 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 28 45 30 47 29 48 46 32 33 36 37 38 34 44 35 27 26 31 25 39 40 41 43 42} -defaultsOSRD -pinDir S_AXI_DAQ left -pinY S_AXI_DAQ 0L -pinDir m_rd_axis left -pinY m_rd_axis 110L -pinDir cpu_clk left -pinY cpu_clk 190L -pinDir cpu_rstn left -pinY cpu_rstn 330L -pinBusDir ad9653_ifc_n_0 left -pinBusY ad9653_ifc_n_0 210L -pinBusDir ad9653_ifc_p_0 left -pinBusY ad9653_ifc_p_0 370L -pinBusDir adc_sync_0 right -pinBusY adc_sync_0 0R -pinDir external_trig_0 left -pinY external_trig_0 390L -pinDir reset left -pinY reset 350L -pinBusDir LED right -pinBusY LED 20R -pinBusDir F_CLK_SEL right -pinBusY F_CLK_SEL 40R -pinBusDir PLL_SCLK right -pinBusY PLL_SCLK 100R -pinBusDir PLL_CS right -pinBusY PLL_CS 120R -pinBusDir PLL_SDIO right -pinBusY PLL_SDIO 140R -pinBusDir ADC_SCLK right -pinBusY ADC_SCLK 60R -pinBusDir AD1_CSB right -pinBusY AD1_CSB 180R -pinBusDir ADC_SDIO right -pinBusY ADC_SDIO 80R -pinBusDir PLL_CLK_P left -pinBusY PLL_CLK_P 170L -pinBusDir PLL_CLK_N left -pinBusY PLL_CLK_N 150L -pinBusDir PLL_SDO left -pinBusY PLL_SDO 230L -pinBusDir EXT_PLL_LOCK left -pinBusY EXT_PLL_LOCK 130L -pinBusDir PLL_RESETN right -pinBusY PLL_RESETN 160R -pinBusDir daq_clk left -pinBusY daq_clk 250L -pinBusDir daq_rstn left -pinBusY daq_rstn 270L -pinBusDir CLK_200M_P left -pinBusY CLK_200M_P 310L -pinBusDir CLK_200M_N left -pinBusY CLK_200M_N 290L
preplace inst rst_inv -pg 1 -lvl 2 -x 648 -y -40 -defaultsOSRD -pinBusDir Op1 left -pinBusY Op1 0L -pinBusDir Res right -pinBusY Res 0R
preplace netloc clk_wiz_clk_out1 1 1 3 250 -160 1060 -40 1850J
preplace netloc rst_clk_wiz_100M_peripheral_aresetn 1 1 3 330 100 860J 560 1730
preplace netloc ddr_ctrl_top_0_ui_rst_n 1 1 1 190 -350n
preplace netloc Net 1 1 2 370J -140 1120
preplace netloc Net1 1 1 2 390J -120 1100
preplace netloc ACLK_1 1 1 1 130 -370n
preplace netloc rst_clk_wiz_100M_peripheral_reset 1 1 2 430J -100 1020
preplace netloc ext_reset_in_1 1 2 2 920 580 1650J
preplace netloc spi_sdis_0_1 1 0 3 -790J 140 210J 52 940J
preplace netloc CPU_TOP_spi_clks_0 1 3 2 NJ 310 2690J
preplace netloc CPU_TOP_spi_sdos_0 1 3 2 NJ 330 2630J
preplace netloc CPU_TOP_spi_csns_0 1 3 2 NJ 350 2610J
preplace netloc ad9653_ifc_n_0_1 1 0 4 -770J 200 110J -220 1140J -20 1810J
preplace netloc ad9653_ifc_p_0_1 1 0 4 -730J 40 170J 140 840J 600 1630J
preplace netloc DAQ_TOP_adc_sync_0 1 4 1 2470J 130n
preplace netloc external_trig_0_1 1 0 4 -750J 954 450J 172 820J 640 1610J
preplace netloc reset_1 1 0 2 -710J 100 150J
preplace netloc DAQ_TOP_daq_rstn 1 1 3 350J -180 960J 500 1710J
preplace netloc daq_clk_1 1 1 3 290J -200 1000J 480 1750J
preplace netloc DAQ_TOP_AD1_CSB 1 4 1 2770J 530n
preplace netloc DAQ_TOP_ADC_SCLK 1 4 1 2550J 210n
preplace netloc DAQ_TOP_ADC_SDIO 1 4 1 2590J 230n
preplace netloc EXT_PLL_LOCK_0_1 1 0 4 -850J -100 -50J -745 1280J -100 1930J
preplace netloc DAQ_TOP_F_CLK_SEL 1 4 1 2510J 190n
preplace netloc DAQ_TOP_LED 1 4 1 2490J 150n
preplace netloc PLL_CLK_N_0_1 1 0 4 -830J -80 -30J -720 1260J -80 1910J
preplace netloc PLL_CLK_P_0_1 1 0 4 -810J -60 -10J -700 1240J -60 1870J
preplace netloc DAQ_TOP_PLL_CS 1 4 1 2710J 270n
preplace netloc DAQ_TOP_PLL_RESETN 1 4 1 2750J 330n
preplace netloc DAQ_TOP_PLL_SCLK 1 4 1 2670J 250n
preplace netloc DAQ_TOP_PLL_SDIO 1 4 1 2730J 290n
preplace netloc PLL_SDO_0_1 1 0 4 -790J 220 70J -260 1080J 440 1790J
preplace netloc CLK_200MM_N_1 1 0 4 -670J 300 310J 120 880J 520 1690
preplace netloc CLK_200MM_P_1 1 0 4 -690J 280 270J 80 900J 540 1670
preplace netloc c0_sys_clk_p_1 1 0 1 N 630
preplace netloc c0_sys_clk_n_1 1 0 1 N 370
preplace netloc ddr_ctrl_top_0_M_AXIS 1 1 1 50 -520n
preplace netloc CPU_TOP_IIC_0 1 3 2 NJ 270 2570J
preplace netloc microblaze_0_axi_periph_M00_AXI 1 1 2 30J -680 1220J
preplace netloc COMM_TOP_cmu2cpu_axis 1 2 1 1200 -620n
preplace netloc udp_2_mem_process_0_m_axis 1 1 1 90J -500n
preplace netloc microblaze_0_axi_periph_M02_AXI 1 2 1 1180 -600n
preplace netloc CPU_TOP_GPIO2_0 1 3 2 NJ 100 2650J
preplace netloc CPU_TOP_M10_AXI_DAQ 1 3 1 1890 290n
preplace netloc udp_eth_0_gt_sfp 1 2 3 980J 620 1770J 480 2530J
preplace netloc CPU_TOP_cpu2udp_axis 1 2 1 1160 -580n
preplace netloc gt_sfp_refclk_0_1 1 0 2 -750J 240 10J
preplace netloc CPU_TOP_GPIO_0 1 3 2 NJ 40 2650J
preplace netloc S_daq2mem_axis_1 1 1 3 230J -240 1040J 460 1830J
preplace netloc MEM_TOP_c0_ddr4_0 1 1 4 410J 200 800J 726 1590J 1050 2610J
levelinfo -pg 1 -870 -190 648 1440 2301 2790
pagesize -pg 1 -db -bbox -sgen -1060 -760 2960 2070
",
   "No Loops_ScaleFactor":"0.256081",
   "No Loops_TopLeft":"-3038,-1004",
   "Reduced Jogs_Layers":"/COMM_TOP/Net1:true|/COMM_TOP/Net:true|/CPU_TOP/axi_timer_0_interrupt:true|/CPU_TOP/mdm_0_Interrupt:true|/CPU_TOP/mdm_0_Debug_SYS_Rst:true|/CPU_TOP/LMB_Rst_1:true|/MEM_TOP/clk_wiz_clk_out1:true|/CPU_TOP/rst_clk_wiz_100M_peripheral_reset:true|/CPU_TOP/rst_clk_wiz_100M_peripheral_aresetn:true|/CPU_TOP/cpu_ram/cpu_ram_0_intr_o:true|/MEM_TOP/ddr_ctrl_top_0_ui_rst_n:true|/CPU_TOP/rst_clk_wiz_100M_mb_reset:true|/MEM_TOP/ACLK_1:true|/ext_reset_in_1:true|",
   "Reduced Jogs_ScaleFactor":"0.78169",
   "Reduced Jogs_TopLeft":"-146,-23",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port c0_sys_0 -pg 1 -lvl 0 -x 0 -y 350 -defaultsOSRD
preplace port gt_sfp_0 -pg 1 -lvl 4 -x 1110 -y 340 -defaultsOSRD
preplace port c0_ddr3_0 -pg 1 -lvl 4 -x 1110 -y 150 -defaultsOSRD
preplace port gt_sfp_refclk_0 -pg 1 -lvl 0 -x 0 -y 100 -defaultsOSRD
preplace port reset -pg 1 -lvl 0 -x 0 -y 260 -defaultsOSRD
preplace inst COMM_TOP -pg 1 -lvl 1 -x 230 -y 130 -defaultsOSRD
preplace inst MEM_TOP -pg 1 -lvl 3 -x 920 -y 170 -defaultsOSRD
preplace inst CPU_TOP -pg 1 -lvl 2 -x 570 -y 160 -defaultsOSRD
preplace netloc clk_wiz_clk_out1 1 0 4 80 250 410 290 NJ 290 1080
preplace netloc rst_clk_wiz_100M_peripheral_aresetn 1 0 3 60 330 NJ 330 760
preplace netloc ddr_ctrl_top_0_ui_rst_n 1 0 4 40 320 NJ 320 NJ 320 1070
preplace netloc Net 1 1 2 420 250 780J
preplace netloc Net1 1 1 2 390 260 770J
preplace netloc ACLK_1 1 0 4 70 270 NJ 270 740J 280 1060
preplace netloc rst_clk_wiz_100M_peripheral_reset 1 2 1 740 190n
preplace netloc ext_reset_in_1 1 0 2 NJ 260 380J
preplace netloc MEM_TOP_C0_DDR3_0 1 3 1 NJ 150
preplace netloc microblaze_0_axi_periph_M02_AXI 1 0 3 30 310 NJ 310 730
preplace netloc microblaze_0_axi_periph_M00_AXI 1 2 1 730 110n
preplace netloc c0_sys_clk_0_1 1 0 3 NJ 350 NJ 350 750J
preplace netloc udp_2_mem_process_0_m_axis 1 1 2 380 60 740J
preplace netloc udp_eth_0_gt_sfp 1 1 3 400J 340 NJ 340 NJ
preplace netloc ddr_ctrl_top_0_M_AXIS 1 0 4 20 300 NJ 300 NJ 300 1090
preplace netloc gt_sfp_refclk_0_1 1 0 1 NJ 100
preplace netloc CPU_TOP_cpu2udp_axis 1 0 3 50 280 NJ 280 720
preplace netloc COMM_TOP_cmu2cpu_axis 1 1 1 410 120n
levelinfo -pg 1 0 230 570 920 1110
pagesize -pg 1 -db -bbox -sgen -150 0 1230 370
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_system()
cr_bd_system ""
set_property REGISTERED_WITH_MANAGER "1" [get_files system.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files system.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse system.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../Work/prj_zyf2/prj_zyf2.gen/sources_1/bd/system/hdl/system_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse system.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcku040-ffva1156-2-i -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcku040-ffva1156-2-i" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "D:/FPGA/TCP_10G/tcp_platform/tcp_platform.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcku040-ffva1156-2-i -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xcku040-ffva1156-2-i" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "D:/FPGA/TCP_10G/tcp_platform/tcp_platform.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
